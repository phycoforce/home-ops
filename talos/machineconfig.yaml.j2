version: v1alpha1
persist: true
machine:
  type: {{ machinetype }}
  token: op://kubernetes/talos/MACHINE_TOKEN
  ca:
    crt: op://kubernetes/talos/MACHINE_CA_CRT
    {% if machinetype == 'controlplane' %}
    key: op://kubernetes/talos/MACHINE_CA_KEY
    {% endif %}
  features:
    rbac: true
    stableHostname: true
    {% if machinetype == 'controlplane' %}
    kubernetesTalosAPIAccess:
      enabled: true
      allowedRoles: ["os:admin"]
      allowedKubernetesNamespaces: ["actions-runner-system", "system-upgrade"]
    {% endif %}
    apidCheckExtKeyUsage: true
    diskQuotaSupport: true
    kubePrism:
      enabled: true
      port: 7445
    hostDNS:
      enabled: true
      resolveMemberNames: true
      forwardKubeDNSToHost: false
  files:
    - op: create
      path: /etc/cri/conf.d/20-customization.part
      content: |
        [plugins."io.containerd.cri.v1.images"]
          discard_unpacked_layers = false
        [plugins."io.containerd.cri.v1.runtime"]
          device_ownership_from_security_context = true
    - op: overwrite
      path: /etc/nfsmount.conf
      permissions: 0o644
      content: |
        [ NFSMount_Global_Options ]
        nfsvers=4.2
        hard=True
        nconnect=16
        nodiratime=True
        noatime=True
  install:
    image: factory.talos.dev/metal-installer/0921460a0f12f9c341229f326207af9446cfc3c37768152138fdc76a7cbc10f8:v1.11.1
  kernel:
    modules:
      - name: nbd
      - name: thunderbolt
      - name: thunderbolt_net
  kubelet:
    image: ghcr.io/siderolabs/kubelet:v1.34.0
    extraConfig:
      featureGates:
        ImageVolume: true
      serializeImagePulls: false
    extraMounts:
      - destination: /var/openebs/local
        type: bind
        source: /var/openebs/local
        options: ["bind", "rshared", "rw"]
    defaultRuntimeSeccompProfileEnabled: true
    nodeIP:
      validSubnets: ["10.0.20.0/24"]
    disableManifestsDirectory: true
  network:
    interfaces:
      - deviceSelector: { busPath: 0000:58:00.0 } # Intel IPMI
        ignore: true
      - interface: bond0
        bond:
          deviceSelectors: [{ hardwareAddr: "58:47:ca:7f:*", driver: i40e }]
        dhcp: true
        mtu: 9000
        vlans:
          - { vlanId: 40, dhcp: false, mtu: 9000 }
          - { vlanId: 99, dhcp: false, mtu: 9000 }
    nameservers: ["10.0.20.1"]
    disableSearchDomain: true
  nodeLabels:
    intel.feature.node.kubernetes.io/gpu: "true"
    topology.kubernetes.io/region: origin
    topology.kubernetes.io/zone: {{ 'm' if machinetype == 'controlplane' else 'w' }}
  sysctls:
    fs.inotify.max_user_watches: 1048576   # Watchdog
    fs.inotify.max_user_instances: 8192    # Watchdog
    net.core.default_qdisc: fq             # 10Gb/s
    net.core.rmem_max: 67108864            # 10Gb/s | Cloudflared / QUIC
    net.core.wmem_max: 67108864            # 10Gb/s | Cloudflared / QUIC
    net.ipv4.neigh.default.gc_thresh1: "4096"  # Prevent ARP cache overflows
    net.ipv4.neigh.default.gc_thresh2: "8192"  # Prevent ARP cache overflows
    net.ipv4.neigh.default.gc_thresh3: "16384" # Prevent ARP cache overflows
    net.ipv4.tcp_congestion_control: bbr   # 10Gb/s
    net.ipv4.tcp_fastopen: 3               # Send and accept data in the opening SYN packet
    net.ipv4.tcp_mtu_probing: 1            # 10Gb/s | Jumbo frames
    net.ipv4.tcp_rmem: 4096 87380 33554432 # 10Gb/s
    net.ipv4.tcp_wmem: 4096 65536 33554432 # 10Gb/s
    net.ipv4.tcp_window_scaling: 1         # 10Gb/s
    sunrpc.tcp_slot_table_entries: 128     # 10Gb/s | NFS
    sunrpc.tcp_max_slot_table_entries: 128 # 10Gb/s | NFS
    user.max_user_namespaces: 11255        # User Namespaces
    vm.nr_hugepages: 1024                  # PostgreSQL
  time:
    disabled: false
    servers: ["time.cloudflare.com"]
cluster:
  ca:
    crt: op://kubernetes/talos/CLUSTER_CA_CRT
    {% if machinetype == 'controlplane' %}
    key: op://kubernetes/talos/CLUSTER_CA_KEY
    {% endif %}
  clusterName: origin
  controlPlane:
    endpoint: https://10.0.20.250:6443
  discovery:
    enabled: true
    registries:
      kubernetes: { disabled: true }
      service: { disabled: false }
  id: op://kubernetes/talos/CLUSTER_ID
  network:
    cni:
      name: none
    dnsDomain: cluster.local
    podSubnets: ["10.69.0.0/16"]
    serviceSubnets: ["10.96.0.0/16"]
  secret: op://kubernetes/talos/CLUSTER_SECRET
  token: op://kubernetes/talos/CLUSTER_TOKEN
  {% if machinetype == 'controlplane' %}
  aggregatorCA:
    crt: op://kubernetes/talos/CLUSTER_AGGREGATORCA_CRT
    key: op://kubernetes/talos/CLUSTER_AGGREGATORCA_KEY
  allowSchedulingOnControlPlanes: true
  apiServer:
    image: registry.k8s.io/kube-apiserver:v1.34.0
    extraArgs:
      enable-aggregator-routing: true
      feature-gates: MutatingAdmissionPolicy=true
      runtime-config: admissionregistration.k8s.io/v1beta1=true
    certSANs: ["127.0.0.1", "10.0.20.250"]
    disablePodSecurityPolicy: true
  controllerManager:
    image: registry.k8s.io/kube-controller-manager:v1.34.0
    extraArgs: { bind-address: 0.0.0.0 }
  coreDNS: { disabled: true }
  etcd:
    advertisedSubnets: ["10.0.20.0/24"]
    ca:
      crt: op://kubernetes/talos/CLUSTER_ETCD_CA_CRT
      key: op://kubernetes/talos/CLUSTER_ETCD_CA_KEY
    extraArgs: { listen-metrics-urls: http://0.0.0.0:2381 }
  proxy:
    disabled: true
    image: registry.k8s.io/kube-proxy:v1.34.0
  secretboxEncryptionSecret: op://kubernetes/talos/CLUSTER_SECRETBOXENCRYPTIONSECRET
  scheduler:
    image: registry.k8s.io/kube-scheduler:v1.34.0
    extraArgs: { bind-address: 0.0.0.0 }
    config:
      apiVersion: kubescheduler.config.k8s.io/v1
      kind: KubeSchedulerConfiguration
      profiles:
        - schedulerName: default-scheduler
          plugins:
            score:
              disabled: [{ name: ImageLocality }]
          pluginConfig:
            - name: PodTopologySpread
              args:
                defaultingType: List
                defaultConstraints:
                  - maxSkew: 1
                    topologyKey: kubernetes.io/hostname
                    whenUnsatisfiable: ScheduleAnyway
  serviceAccount:
    key: op://kubernetes/talos/CLUSTER_SERVICEACCOUNT_KEY
  {% endif %}
---
apiVersion: v1alpha1
kind: EthernetConfig
name: enp2s0f0np0
rings:
  rx: 8160
  tx: 8160
---
apiVersion: v1alpha1
kind: EthernetConfig
name: enp2s0f1np1
rings:
  rx: 8160
  tx: 8160

