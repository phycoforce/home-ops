---
# yaml-language-server: $schema=https://taskfile.dev/schema.json
version: "3"

vars:
  TALOS_MACHINE_FILE: '{{.TALOS_DIR}}/machineconfig.yaml.j2'

tasks:
  apply-node:
    desc: Apply Talos config to a node [NODE=required] [MODE=auto]
    cmd: |-
      minijinja-cli {{.TALOS_DIR}}/machineconfig.yaml.j2 | op inject \
        | talosctl --nodes {{.NODE}} apply-config \
          --mode {{.MODE}} \
          --config-patch @{{.TALOS_DIR}}/{{.MACHINE_TYPE}}/{{.NODE}}.yaml \
          --file /dev/stdin {{if .INSECURE}}--insecure{{end}}
    vars:
      MODE: '{{.MODE | default "auto"}}'
      INSECURE:
        sh: talosctl --nodes {{.NODE}} get machineconfig &> /dev/null || echo true
      MACHINE_TYPE:
        sh: |-
          talosctl --nodes "${NODE}" get machinetypes --output=jsonpath='{.spec}' 2>/dev/null \
            || basename "$(find "${TALOS_DIR}" -name "${NODE}.yaml" -exec dirname {} \;)"
    env:
      MACHINE_TYPE: '{{.MACHINE_TYPE}}'
      TALOS_SCHEMATIC:
        sh: |-
          curl --silent -X POST --data-binary @{{.TALOS_DIR}}/schematic.yaml https://factory.talos.dev/schematics \
            | jq --raw-output '.id'
    requires:
      vars: [NODE]
    preconditions:
      - op whoami --format=json
      - talosctl config info
      - test -f {{.TALOS_DIR}}/machineconfig.yaml.j2
      - test -f {{.TALOS_DIR}}/{{.MACHINE_TYPE}}/{{.NODE}}.yaml
      - test -f {{.TALOS_DIR}}/schematic.yaml
      - which curl jq minijinja-cli op talosctl

  apply-node-test:
    desc: Apply Talos config to a node [NODE=required] [MODE=auto]
    cmd: |-
      minijinja-cli {{.TALOS_DIR}}/machineconfig.yaml.j2 | op inject
    vars:
      MODE: '{{.MODE | default "auto"}}'
      INSECURE:
        sh: talosctl --nodes {{.NODE}} get machineconfig &> /dev/null || echo true
      MACHINE_TYPE:
        sh: |-
          talosctl --nodes "${NODE}" get machinetypes --output=jsonpath='{.spec}' 2>/dev/null \
            || basename "$(find "${TALOS_DIR}" -name "${NODE}.yaml" -exec dirname {} \;)"
    env:
      MACHINE_TYPE: '{{.MACHINE_TYPE}}'
      TALOS_SCHEMATIC:
        sh: |-
          curl --silent -X POST --data-binary @{{.TALOS_DIR}}/schematic.yaml https://factory.talos.dev/schematics \
            | jq --raw-output '.id'
    requires:
      vars: [NODE]
    preconditions:
      - op whoami --format=json
      - talosctl config info
      - test -f {{.TALOS_DIR}}/machineconfig.yaml.j2
      - test -f {{.TALOS_DIR}}/{{.MACHINE_TYPE}}/{{.NODE}}.yaml
      - test -f {{.TALOS_DIR}}/schematic.yaml
      - which curl jq minijinja-cli op talosctl
