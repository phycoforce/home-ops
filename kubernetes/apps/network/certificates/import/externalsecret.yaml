---
# yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/external-secrets.io/externalsecret_v1.json
apiVersion: external-secrets.io/v1
kind: ExternalSecret
metadata:
  name: ${SECRET_DOMAIN/./-}-production-tls
spec:
  refreshPolicy: CreatedOnce
  secretStoreRef:
    kind: ClusterSecretStore
    name: onepassword
  target:
    name: ${SECRET_DOMAIN/./-}-production-tls
    creationPolicy: Orphan
    template:
      type: kubernetes.io/tls
      metadata:
        annotations:
          cert-manager.io/alt-names: "*.${SECRET_DOMAIN},${SECRET_DOMAIN}"
          cert-manager.io/certificate-name: ${SECRET_DOMAIN/./-}-production
          cert-manager.io/common-name: ${SECRET_DOMAIN}
          cert-manager.io/ip-sans: ""
          cert-manager.io/issuer-group: ""
          cert-manager.io/issuer-kind: ClusterIssuer
          cert-manager.io/issuer-name: letsencrypt-production
          cert-manager.io/uri-sans: ""
        labels:
          controller.cert-manager.io/fao: "true"
  dataFrom:
    - extract:
        key: lets-encrypt-tls
        decodingStrategy: Base64
---
# yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/external-secrets.io/externalsecret_v1.json
apiVersion: external-secrets.io/v1
kind: ExternalSecret
metadata:
  name: ${SECRET_DOMAIN/./-}-unifi
spec:
  refreshPolicy: CreatedOnce
  secretStoreRef:
    kind: ClusterSecretStore
    name: onepassword
  target:
    name: ${SECRET_DOMAIN/./-}-unifi
    creationPolicy: Orphan
    template:
      type: kubernetes.io/tls
      metadata:
        annotations:
          cert-manager.io/alt-names: unifi.${SECRET_DOMAIN}
          cert-manager.io/certificate-name: ${SECRET_DOMAIN/./-}-unifi
          cert-manager.io/common-name: unifi.${SECRET_DOMAIN}
          cert-manager.io/ip-sans: ""
          cert-manager.io/issuer-group: ""
          cert-manager.io/issuer-kind: ClusterIssuer
          cert-manager.io/issuer-name: letsencrypt-production
          cert-manager.io/uri-sans: ""
        labels:
          controller.cert-manager.io/fao: "true"
  dataFrom:
    - extract:
        key: lets-encrypt-unifi
        decodingStrategy: Base64
---
# yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/external-secrets.io/externalsecret_v1.json
apiVersion: external-secrets.io/v1
kind: ExternalSecret
metadata:
  name: ${SECRET_DOMAIN_2/./-}-production-tls
spec:
  refreshPolicy: CreatedOnce
  secretStoreRef:
    kind: ClusterSecretStore
    name: onepassword
  target:
    name: ${SECRET_DOMAIN_2/./-}-production-tls
    creationPolicy: Orphan
    template:
      type: kubernetes.io/tls
      metadata:
        annotations:
          cert-manager.io/alt-names: "*.${SECRET_DOMAIN_2},${SECRET_DOMAIN_2}"
          cert-manager.io/certificate-name: ${SECRET_DOMAIN_2/./-}-production
          cert-manager.io/common-name: ${SECRET_DOMAIN_2}
          cert-manager.io/ip-sans: ""
          cert-manager.io/issuer-group: ""
          cert-manager.io/issuer-kind: ClusterIssuer
          cert-manager.io/issuer-name: letsencrypt-production
          cert-manager.io/uri-sans: ""
        labels:
          controller.cert-manager.io/fao: "true"
  dataFrom:
    - extract:
        key: lets-encrypt-tls-2
        decodingStrategy: Base64
