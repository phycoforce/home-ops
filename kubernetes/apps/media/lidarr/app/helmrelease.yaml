---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: lidarr
spec:
  interval: 1h
  chartRef:
    kind: OCIRepository
    name: app-template
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  dependsOn:
    - name: longhorn
      namespace: longhorn-system
  values:
    controllers:
      lidarr:
        annotations:
          reloader.stakater.com/auto: "true"
        pod:
          securityContext:
            runAsNonRoot: true
            runAsUser: 1001
            runAsGroup: 1001
            fsGroup: 1001
            fsGroupChangePolicy: OnRootMismatch
            seccompProfile: { type: RuntimeDefault }
        containers:
          app:
            image:
              repository: ghcr.io/home-operations/lidarr
              tag: 2.10.3@sha256:a73e3aa53c1e5286df06f86179dbcad671f697a0164db650fd594d59cb90e188
            env:
              LIDARR__AUTH__METHOD: External
              LIDARR__AUTH__REQUIRED: DisabledForLocalAddresses
              LIDARR__APP__THEME: dark
              TZ: Europe/London
            #envFrom:
            #  - secretRef:
            #      name: lidarr
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: ["ALL"] }
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /ping
                    port: &port 8686
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
            resources:
              requests:
                cpu: 10m
                memory: 250Mi
              limits:
                memory: 500Mi
    service:
      app:
        controller: lidarr
        ports:
          http:
            port: *port
    ingress:
      app:
        className: internal
        hosts:
          - host: lidarr.${SECRET_DOMAIN}
            paths:
              - path: /
                service:
                  identifier: app
                  port: http
    persistence:
      config:
        existingClaim: lidarr
      media:
        type: nfs
        server: aionios.internal
        path: /mnt/mechonis/media_data
        globalMounts:
          - path: /data
      tmp:
         type: emptyDir
